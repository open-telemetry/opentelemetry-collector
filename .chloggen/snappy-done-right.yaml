# Use this changelog template to create an entry for release notes.

# One of 'breaking', 'deprecation', 'new_component', 'enhancement', 'bug_fix'
change_type: bug_fix

# The name of the component, or a single word describing the area of concern, (e.g. otlpreceiver)
component: confighttp and configcompression

# A brief description of the change.  Surround your text with quotes ("") if it needs to start with a backtick (`).
note: "Fix handling of `snappy` content-encoding in a backwards-compatible way"

# One or more tracking issues or pull requests related to the change
issues: [10584, 12825]

# (Optional) One or more lines of additional information to render under the primary note.
# These lines will be padded with 2 spaces and then inserted directly into the document.
# Use pipe (|) for multiline entries.
subtext: |
  The collector used the Snappy compression type of "framed" to handle the HTTP
  content-encoding "snappy".  However, this encoding is typically used to indicate
  the "block" compression variant of "snappy".  This change allows the collector to:
  - When receiving a request with encoding 'snappy', the server endpoints will peek
    at the first bytes of the payload to determine if it is "framed" or "block" snappy,
    and will decompress accordingly.  This is a backwards-compatible change.

  If the feature-gate "confighttp.framedSnappy" is enabled, you'll see new behavior for both client and server:
  - Client compression type "snappy" will now compress to the "block" variant of snappy
    instead of "framed". Client compression type "x-snappy-framed" will now compress to the "framed" variant of snappy.
  - Servers will accept both "snappy" and "x-snappy-framed" as valid content-encodings.

# Optional: The change log or logs in which this entry should be included.
# e.g. '[user]' or '[user, api]'
# Include 'user' if the change is relevant to end users.
# Include 'api' if there is a change to a library API.
# Default: '[user]'
change_logs: [user]
