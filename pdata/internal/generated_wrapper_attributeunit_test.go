// Copyright The OpenTelemetry Authors
// SPDX-License-Identifier: Apache-2.0

// Code generated by "internal/cmd/pdatagen/main.go". DO NOT EDIT.
// To regenerate this file run "make genpdata".

package internal

import (
	"testing"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"

	otlpprofiles "go.opentelemetry.io/collector/pdata/internal/data/protogen/profiles/v1development"
	"go.opentelemetry.io/collector/pdata/internal/json"
)

func TestCopyOrigAttributeUnit(t *testing.T) {
	src := &otlpprofiles.AttributeUnit{}
	dest := &otlpprofiles.AttributeUnit{}
	CopyOrigAttributeUnit(dest, src)
	assert.Equal(t, &otlpprofiles.AttributeUnit{}, dest)
	FillOrigTestAttributeUnit(src)
	CopyOrigAttributeUnit(dest, src)
	assert.Equal(t, src, dest)
}

func TestMarshalAndUnmarshalJSONOrigAttributeUnit(t *testing.T) {
	src := &otlpprofiles.AttributeUnit{}
	FillOrigTestAttributeUnit(src)
	stream := json.BorrowStream(nil)
	defer json.ReturnStream(stream)
	MarshalJSONOrigAttributeUnit(src, stream)
	require.NoError(t, stream.Error())

	// Append an unknown field at the start to ensure unknown fields are skipped
	// and the unmarshal logic continues.
	buf := stream.Buffer()
	assert.EqualValues(t, '{', buf[0])
	iter := json.BorrowIterator(append([]byte(`{"unknown": "string",`), buf[1:]...))
	defer json.ReturnIterator(iter)
	dest := &otlpprofiles.AttributeUnit{}
	UnmarshalJSONOrigAttributeUnit(dest, iter)
	require.NoError(t, iter.Error())

	assert.Equal(t, src, dest)
}

func TestMarshalAndUnmarshalProtoOrigAttributeUnit(t *testing.T) {
	src := &otlpprofiles.AttributeUnit{}
	FillOrigTestAttributeUnit(src)
	buf, err := MarshalProtoOrigAttributeUnit(src)
	require.NoError(t, err)
	assert.Equal(t, len(buf), SizeProtoOrigAttributeUnit(src))

	dest := &otlpprofiles.AttributeUnit{}
	require.NoError(t, UnmarshalProtoOrigAttributeUnit(dest, buf))
	assert.Equal(t, src, dest)
}

func TestMarshalAndUnmarshalProtoOrigEmptyAttributeUnit(t *testing.T) {
	src := &otlpprofiles.AttributeUnit{}
	buf, err := MarshalProtoOrigAttributeUnit(src)
	require.NoError(t, err)
	assert.Equal(t, len(buf), SizeProtoOrigAttributeUnit(src))

	dest := &otlpprofiles.AttributeUnit{}
	require.NoError(t, UnmarshalProtoOrigAttributeUnit(dest, buf))
	assert.Equal(t, src, dest)
}
