// Copyright The OpenTelemetry Authors
// SPDX-License-Identifier: Apache-2.0

// Code generated by "internal/cmd/pdatagen/main.go". DO NOT EDIT.
// To regenerate this file run "make genpdata".

package internal

import (
	"go.opentelemetry.io/collector/pdata/internal/data"
	otlpmetrics "go.opentelemetry.io/collector/pdata/internal/data/protogen/metrics/v1"
)

func CopyOrigExemplar(dest, src *otlpmetrics.Exemplar) {
	dest.TimeUnixNano = src.TimeUnixNano
	switch t := src.Value.(type) {
	case *otlpmetrics.Exemplar_AsDouble:
		dest.Value = &otlpmetrics.Exemplar_AsDouble{AsDouble: t.AsDouble}
	case *otlpmetrics.Exemplar_AsInt:
		dest.Value = &otlpmetrics.Exemplar_AsInt{AsInt: t.AsInt}
	}
	dest.FilteredAttributes = CopyOrigKeyValueSlice(dest.FilteredAttributes, src.FilteredAttributes)
	dest.TraceId = src.TraceId
	dest.SpanId = src.SpanId
}

func FillOrigTestExemplar(orig *otlpmetrics.Exemplar) {
	orig.TimeUnixNano = 1234567890
	orig.Value = &otlpmetrics.Exemplar_AsInt{AsInt: int64(13)}
	orig.FilteredAttributes = GenerateOrigTestKeyValueSlice()
	orig.TraceId = data.TraceID([16]byte{1, 2, 3, 4, 5, 6, 7, 8, 8, 7, 6, 5, 4, 3, 2, 1})
	orig.SpanId = data.SpanID([8]byte{8, 7, 6, 5, 4, 3, 2, 1})
}
