// Copyright The OpenTelemetry Authors
// SPDX-License-Identifier: Apache-2.0

// Code generated by "pdata/internal/cmd/pdatagen/main.go". DO NOT EDIT.
// To regenerate this file run "make genpdata".

package pentity

import (
	"go.opentelemetry.io/collector/pdata/internal"
	otlpentities "go.opentelemetry.io/collector/pdata/internal/data/protogen/entities/v1"
	"go.opentelemetry.io/collector/pdata/pcommon"
)

// EntityState are experimental implementation of OpenTelemetry Entity Data Model.

// This is a reference type, if passed by value and callee modifies it the
// caller will see the modification.
//
// Must use NewEntityState function to create new instances.
// Important: zero-initialized instance is not valid for use.
type EntityState struct {
	orig  *otlpentities.EntityState
	state *internal.State
}

func newEntityState(orig *otlpentities.EntityState, state *internal.State) EntityState {
	return EntityState{orig: orig, state: state}
}

// NewEntityState creates a new empty EntityState.
//
// This must be used only in testing code. Users should use "AppendEmpty" when part of a Slice,
// OR directly access the member if this is embedded in another struct.
func NewEntityState() EntityState {
	state := internal.StateMutable
	return newEntityState(&otlpentities.EntityState{}, &state)
}

// MoveTo moves all properties from the current struct overriding the destination and
// resetting the current instance to its zero value
func (ms EntityState) MoveTo(dest EntityState) {
	ms.state.AssertMutable()
	dest.state.AssertMutable()
	*dest.orig = *ms.orig
	*ms.orig = otlpentities.EntityState{}
}

// Attributes returns the Attributes associated with this EntityState.
func (ms EntityState) Attributes() pcommon.Map {
	return pcommon.Map(internal.NewMap(&ms.orig.Attributes, ms.state))
}

// DroppedAttributesCount returns the droppedattributescount associated with this EntityState.
func (ms EntityState) DroppedAttributesCount() uint32 {
	return ms.orig.DroppedAttributesCount
}

// SetDroppedAttributesCount replaces the droppedattributescount associated with this EntityState.
func (ms EntityState) SetDroppedAttributesCount(v uint32) {
	ms.state.AssertMutable()
	ms.orig.DroppedAttributesCount = v
}

// CopyTo copies all properties from the current struct overriding the destination.
func (ms EntityState) CopyTo(dest EntityState) {
	dest.state.AssertMutable()
	ms.Attributes().CopyTo(dest.Attributes())
	dest.SetDroppedAttributesCount(ms.DroppedAttributesCount())
}
