// Copyright The OpenTelemetry Authors
// SPDX-License-Identifier: Apache-2.0

// Code generated by "pdata/internal/cmd/pdatagen/main.go". DO NOT EDIT.
// To regenerate this file run "make genpdata".

package pentity

import (
	"testing"

	"github.com/stretchr/testify/assert"

	"go.opentelemetry.io/collector/pdata/internal"
	otlpentities "go.opentelemetry.io/collector/pdata/internal/data/protogen/entities/v1"
	"go.opentelemetry.io/collector/pdata/pcommon"
)

func TestEntityState_MoveTo(t *testing.T) {
	ms := generateTestEntityState()
	dest := NewEntityState()
	ms.MoveTo(dest)
	assert.Equal(t, NewEntityState(), ms)
	assert.Equal(t, generateTestEntityState(), dest)
	sharedState := internal.StateReadOnly
	assert.Panics(t, func() { ms.MoveTo(newEntityState(&otlpentities.EntityState{}, &sharedState)) })
	assert.Panics(t, func() { newEntityState(&otlpentities.EntityState{}, &sharedState).MoveTo(dest) })
}

func TestEntityState_CopyTo(t *testing.T) {
	ms := NewEntityState()
	orig := NewEntityState()
	orig.CopyTo(ms)
	assert.Equal(t, orig, ms)
	orig = generateTestEntityState()
	orig.CopyTo(ms)
	assert.Equal(t, orig, ms)
	sharedState := internal.StateReadOnly
	assert.Panics(t, func() { ms.CopyTo(newEntityState(&otlpentities.EntityState{}, &sharedState)) })
}

func TestEntityState_Attributes(t *testing.T) {
	ms := NewEntityState()
	assert.Equal(t, pcommon.NewMap(), ms.Attributes())
	internal.FillTestMap(internal.Map(ms.Attributes()))
	assert.Equal(t, pcommon.Map(internal.GenerateTestMap()), ms.Attributes())
}

func TestEntityState_DroppedAttributesCount(t *testing.T) {
	ms := NewEntityState()
	assert.Equal(t, uint32(0), ms.DroppedAttributesCount())
	ms.SetDroppedAttributesCount(uint32(17))
	assert.Equal(t, uint32(17), ms.DroppedAttributesCount())
	sharedState := internal.StateReadOnly
	assert.Panics(t, func() {
		newEntityState(&otlpentities.EntityState{}, &sharedState).SetDroppedAttributesCount(uint32(17))
	})
}

func generateTestEntityState() EntityState {
	tv := NewEntityState()
	fillTestEntityState(tv)
	return tv
}

func fillTestEntityState(tv EntityState) {
	internal.FillTestMap(internal.NewMap(&tv.orig.Attributes, tv.state))
	tv.orig.DroppedAttributesCount = uint32(17)
}
