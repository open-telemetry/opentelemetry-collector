// Code generated by mdatagen. DO NOT EDIT.

package metadatatest

import (
	"context"
	"testing"

	"github.com/stretchr/testify/require"
	"go.opentelemetry.io/otel/sdk/metric/metricdata"
	"go.opentelemetry.io/otel/sdk/metric/metricdata/metricdatatest"

	"go.opentelemetry.io/collector/processor/memorylimiterprocessor/internal/metadata"
)

func TestSetupTelemetry(t *testing.T) {
	testTel := SetupTelemetry()
	tb, err := metadata.NewTelemetryBuilder(
		testTel.NewTelemetrySettings(),
	)
	require.NoError(t, err)
	require.NotNil(t, tb)
	tb.ProcessorAcceptedLogRecords.Add(context.Background(), 1)
	tb.ProcessorAcceptedMetricPoints.Add(context.Background(), 1)
	tb.ProcessorAcceptedSpans.Add(context.Background(), 1)
	tb.ProcessorRefusedLogRecords.Add(context.Background(), 1)
	tb.ProcessorRefusedMetricPoints.Add(context.Background(), 1)
	tb.ProcessorRefusedSpans.Add(context.Background(), 1)

	testTel.AssertMetrics(t, []metricdata.Metrics{
		{
			Name:        "otelcol_processor_accepted_log_records",
			Description: "Number of log records successfully pushed into the next component in the pipeline. [deprecated since v0.110.0]",
			Unit:        "{records}",
			Data: metricdata.Sum[int64]{
				Temporality: metricdata.CumulativeTemporality,
				IsMonotonic: true,
				DataPoints: []metricdata.DataPoint[int64]{
					{},
				},
			},
		},
		{
			Name:        "otelcol_processor_accepted_metric_points",
			Description: "Number of metric points successfully pushed into the next component in the pipeline. [deprecated since v0.110.0]",
			Unit:        "{datapoints}",
			Data: metricdata.Sum[int64]{
				Temporality: metricdata.CumulativeTemporality,
				IsMonotonic: true,
				DataPoints: []metricdata.DataPoint[int64]{
					{},
				},
			},
		},
		{
			Name:        "otelcol_processor_accepted_spans",
			Description: "Number of spans successfully pushed into the next component in the pipeline. [deprecated since v0.110.0]",
			Unit:        "{spans}",
			Data: metricdata.Sum[int64]{
				Temporality: metricdata.CumulativeTemporality,
				IsMonotonic: true,
				DataPoints: []metricdata.DataPoint[int64]{
					{},
				},
			},
		},
		{
			Name:        "otelcol_processor_refused_log_records",
			Description: "Number of log records that were rejected by the next component in the pipeline. [deprecated since v0.110.0]",
			Unit:        "{records}",
			Data: metricdata.Sum[int64]{
				Temporality: metricdata.CumulativeTemporality,
				IsMonotonic: true,
				DataPoints: []metricdata.DataPoint[int64]{
					{},
				},
			},
		},
		{
			Name:        "otelcol_processor_refused_metric_points",
			Description: "Number of metric points that were rejected by the next component in the pipeline. [deprecated since v0.110.0]",
			Unit:        "{datapoints}",
			Data: metricdata.Sum[int64]{
				Temporality: metricdata.CumulativeTemporality,
				IsMonotonic: true,
				DataPoints: []metricdata.DataPoint[int64]{
					{},
				},
			},
		},
		{
			Name:        "otelcol_processor_refused_spans",
			Description: "Number of spans that were rejected by the next component in the pipeline. [deprecated since v0.110.0]",
			Unit:        "{spans}",
			Data: metricdata.Sum[int64]{
				Temporality: metricdata.CumulativeTemporality,
				IsMonotonic: true,
				DataPoints: []metricdata.DataPoint[int64]{
					{},
				},
			},
		},
	}, metricdatatest.IgnoreTimestamp(), metricdatatest.IgnoreValue())

	AssertEqualProcessorAcceptedLogRecords(t, testTel.Telemetry,
		[]metricdata.DataPoint[int64]{{}},
		metricdatatest.IgnoreTimestamp(), metricdatatest.IgnoreValue())

	AssertEqualProcessorAcceptedMetricPoints(t, testTel.Telemetry,
		[]metricdata.DataPoint[int64]{{}},
		metricdatatest.IgnoreTimestamp(), metricdatatest.IgnoreValue())

	AssertEqualProcessorAcceptedSpans(t, testTel.Telemetry,
		[]metricdata.DataPoint[int64]{{}},
		metricdatatest.IgnoreTimestamp(), metricdatatest.IgnoreValue())

	AssertEqualProcessorRefusedLogRecords(t, testTel.Telemetry,
		[]metricdata.DataPoint[int64]{{}},
		metricdatatest.IgnoreTimestamp(), metricdatatest.IgnoreValue())

	AssertEqualProcessorRefusedMetricPoints(t, testTel.Telemetry,
		[]metricdata.DataPoint[int64]{{}},
		metricdatatest.IgnoreTimestamp(), metricdatatest.IgnoreValue())

	AssertEqualProcessorRefusedSpans(t, testTel.Telemetry,
		[]metricdata.DataPoint[int64]{{}},
		metricdatatest.IgnoreTimestamp(), metricdatatest.IgnoreValue())

	require.NoError(t, testTel.Shutdown(context.Background()))
}
