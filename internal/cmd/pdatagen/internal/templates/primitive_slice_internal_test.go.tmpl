// Copyright The OpenTelemetry Authors
// SPDX-License-Identifier: Apache-2.0

// Code generated by "internal/cmd/pdatagen/main.go". DO NOT EDIT.
// To regenerate this file run "make genpdata".

package internal

import (
	{{ range $index, $element := .testImports -}}
	{{ if ne $element "go.opentelemetry.io/collector/pdata/internal" }}
	{{ $element }}
	{{- end }}
	{{- end }}
)

func TestCopyOrig{{ .elementOriginName }}Slice(t *testing.T) {
	src := []{{ .itemType }}{}
	dest := []{{ .itemType }}{}
	// Copy empty
	dest = CopyOrig{{ .elementOriginName }}Slice(dest, src)
	assert.Equal(t, src, dest)
	src = GenerateOrigTest{{ .elementOriginName }}Slice()
	dest = CopyOrig{{ .elementOriginName }}Slice(dest, src)
	assert.Equal(t, src, dest)
}

func TestMarshalAndUnmarshalJSONOrig{{ .elementOriginName }}Slice(t *testing.T) {
	src := GenerateOrigTest{{ .elementOriginName }}Slice()

	stream := json.BorrowStream(nil)
	defer json.ReturnStream(stream)
	MarshalJSONOrig{{ .elementOriginName }}Slice(src, stream)
	require.NoError(t, stream.Error())

	iter := json.BorrowIterator(stream.Buffer())
	defer json.ReturnIterator(iter)
	dest := UnmarshalJSONOrig{{ .elementOriginName }}Slice(iter)
	require.NoError(t, iter.Error())

	assert.Equal(t, src, dest)
}
